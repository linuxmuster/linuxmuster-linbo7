#
# default grub.cfg, local boot version (placed in linbo cache)
# thomas@linuxmuster.net
# 20250808
#

set default=0
set fallback=1
set timeout=0

#loadfont "$prefix/unicode.pf2"
if [ "$grub_platform" = "pc" ]; then
 insmod biosdisk
 insmod ntldr
else
 insmod efi_gop
 insmod efi_uga
fi
insmod all_video
insmod png
insmod gfxterm
insmod gfxmenu
insmod chain
insmod configfile
insmod ext2
insmod fat
insmod ntfs
insmod linux
insmod loadenv
insmod minicmd
insmod part_msdos
insmod part_gpt
insmod progress
insmod reiserfs
insmod search
insmod terminal
insmod test

# find cache partition and set it as root
if search --set root --file /start.conf; then
 set linboroot="${root}"
fi

set prefix=/boot/grub

# try to boot os directly if reboot is set
menuentry 'OS localboot' {
  if [ -s $prefix/grubenv ] ; then
   echo -n Loading grub environment ...
   load_env
   echo
  fi

  if [ -n "${reboot_iso}" ]; then
    search --set tmproot --file "/${reboot_iso}"
  elif [ -n "${reboot_label}" ]; then
    search --label "$reboot_label" --set tmproot
  fi
  if [ -n "${reboot_grub}" -a -z "${tmproot}" ]; then
    set tmproot="${reboot_grub}"
  fi

  if [ -n "${tmproot}" ]; then
   terminal_output console
   echo Booting operating system ...
   echo

   set reboot_grub=""
   set reboot_label=""
   save_env reboot_grub
   save_env reboot_label
   set root="${tmproot}"
   set win_efiloader="/EFI/Microsoft/Boot/bootmgfw.efi"

   if [ -n "$reboot_iso" -a -e "/$reboot_iso" ]; then
    set isofile="${reboot_iso}"
    set reboot_iso=""
    save_env reboot_iso
    loopback loop /${isofile}
    linux (loop)/$reboot_kernel $reboot_append
    initrd (loop)/$reboot_initrd
    boot
   elif [ -e "$reboot_kernel" -a -e "$reboot_initrd" ]; then
    linux $reboot_kernel $reboot_append
    initrd $reboot_initrd
    boot
   elif [ -e /boot/vmlinuz -a -e /boot/initrd.img ]; then
    linux /boot/vmlinuz $reboot_append
    initrd /boot/initrd.img
    boot
   elif [ -e /boot/vmlinuz -a -e /boot/initrd ]; then
    linux /boot/vmlinuz $reboot_append
    initrd /boot/initrd
    boot
   elif [ -e /vmlinuz -a -e /initrd.img ]; then
    linux /vmlinuz $reboot_append
    initrd /initrd.img
    boot
   elif [ -e /vmlinuz -a -e /initrd ]; then
    linux /vmlinuz $reboot_append
    initrd /initrd
    boot
   elif [ -s /boot/grub/grub.cfg ] ; then
    configfile /boot/grub/grub.cfg
   elif [ "$grub_platform" = "pc" ]; then
    if [ -s /bootmgr ] ; then
     ntldr /bootmgr
     boot
    elif [ -s /ntldr ] ; then
     ntldr /ntldr
     boot
    elif [ -s /grldr ] ; then
     ntldr /grldr
     boot
    else
     chainloader +1
     boot
    fi
   elif [ -e "$win_efiloader" ]; then
    chainloader $win_efiloader
    boot
   fi

  # if no reboot is set load group specific custom.cfg if present
  elif [ -s /boot/grub/custom.cfg ] ; then
   configfile /boot/grub/custom.cfg
  fi
}

# boot linbo local from cache in failsafe mode
menuentry 'LINBO' {
 # kernel & initrd
 set linbo_kernel=/linbo64
 set linbo_initrd=/linbofs64

 set root="${linboroot}"
 if [ -e "$linbo_kernel" -a -e "$linbo_initrd" ]; then
  set gfxpayload=640x480x16
  echo "LINBO localboot in failsafe mode"
  echo -n "Loading $linbo_kernel .."
  linux $linbo_kernel quiet localboot nomodeset
  echo
  echo -n "Loading $linbo_initrd .."
  initrd $linbo_initrd
  boot
 else
  echo -n "Initiating pxe boot ..."
  if [ "$grub_platform" = "pc" ]; then
   linux16 /ipxe.lkrn dhcp
  else
   chainloader /ipxe.efi
  fi
  boot
 fi
}
